{"version":3,"file":"static/js/635.0895244a.chunk.js","mappings":"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","sources":["ui-component/extended/Avatar.js","ui-component/cards/CardSecondaryAction.js","views/utilities/EditCustomer.js","views/utilities/Customer.js","views/utilities/AddCustomer.js","views/utilities/Customers.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport MuiAvatar from '@mui/material/Avatar';\n\n// ==============================|| AVATAR ||============================== //\n\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\n    const theme = useTheme();\n\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\n    const outlineSX = outline && {\n        color: color ? `${color}.main` : `primary.main`,\n        bgcolor: theme.palette.background.paper,\n        border: '2px solid',\n        borderColor: color ? `${color}.main` : `primary.main`\n    };\n    let sizeSX = {};\n    switch (size) {\n        case 'badge':\n            sizeSX = {\n                width: theme.spacing(3.5),\n                height: theme.spacing(3.5)\n            };\n            break;\n        case 'xs':\n            sizeSX = {\n                width: theme.spacing(4.25),\n                height: theme.spacing(4.25)\n            };\n            break;\n        case 'sm':\n            sizeSX = {\n                width: theme.spacing(5),\n                height: theme.spacing(5)\n            };\n            break;\n        case 'lg':\n            sizeSX = {\n                width: theme.spacing(9),\n                height: theme.spacing(9)\n            };\n            break;\n        case 'xl':\n            sizeSX = {\n                width: theme.spacing(10.25),\n                height: theme.spacing(10.25)\n            };\n            break;\n        case 'md':\n            sizeSX = {\n                width: theme.spacing(7.5),\n                height: theme.spacing(7.5)\n            };\n            break;\n        default:\n            sizeSX = {};\n    }\n\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\n};\n\nAvatar.propTypes = {\n    className: PropTypes.string,\n    color: PropTypes.string,\n    outline: PropTypes.bool,\n    size: PropTypes.string,\n    sx: PropTypes.object\n};\n\nexport default Avatar;\n","import PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\n\n// project imports\nimport Avatar from '../extended/Avatar';\n\n// ==============================|| CARD SECONDARY ACTION ||============================== //\n\nconst CardSecondaryAction = ({ title, link, icon }) => {\n    const theme = useTheme();\n\n    return (\n        <Tooltip title={title || 'Reference'} placement=\"left\">\n            <ButtonBase disableRipple>\n                {!icon && (\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <g clipPath=\"url(#clip0)\">\n                                <path\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\n                                    fill={theme.palette.primary[800]}\n                                />\n                                <path\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\n                                    fill={theme.palette.primary.main}\n                                />\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\n                                <path\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\n                                    fill={theme.palette.primary.main}\n                                />\n                            </g>\n                            <defs>\n                                <clipPath id=\"clip0\">\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\n                                </clipPath>\n                            </defs>\n                        </svg>\n                    </Avatar>\n                )}\n                {icon && (\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\n                        {icon}\n                    </Avatar>\n                )}\n            </ButtonBase>\n        </Tooltip>\n    );\n};\n\nCardSecondaryAction.propTypes = {\n    icon: PropTypes.node,\n    link: PropTypes.string,\n    title: PropTypes.string\n};\n\nexport default CardSecondaryAction;\n","import { useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    // test\n    button: {\n        display: 'flex',\n        borderRadius: '30px',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '40px'\n    }\n}));\n\nexport default function EditButton({ customer }) {\n    const [open, setOpen] = useState(false);\n    const [name, setName] = useState(customer.name);\n    const [phone, setPhoneNumber] = useState(customer.phone);\n    const [hairColor, setFavoriteHairColor] = useState(customer.hairColor);\n    const classes = useStyles();\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleSave = () => {\n        console.log({ id: customer.id, name, phone, hairColor });\n        handleClose();\n    };\n\n    return (\n        <>\n            <Button variant=\"contained\" color=\"primary\" shape=\"circle\" onClick={handleClickOpen} className={classes.button}>\n                <EditIcon />\n            </Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Edit Customer</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Name\"\n                        type=\"text\"\n                        fullWidth\n                        value={name}\n                        onChange={(event) => setName(event.target.value)}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"phoneNumber\"\n                        label=\"Phone Number\"\n                        type=\"text\"\n                        fullWidth\n                        value={phone}\n                        onChange={(event) => setPhoneNumber(event.target.value)}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"favoriteHairColor\"\n                        label=\"Favorite Hair Color\"\n                        type=\"text\"\n                        fullWidth\n                        value={hairColor}\n                        onChange={(event) => setFavoriteHairColor(event.target.value)}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleSave} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n","import { makeStyles } from '@mui/styles';\nimport { Card, CardContent, CardMedia, Typography } from '@mui/material';\nimport EditButton from './EditCustomer';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        width: '100%',\n        marginBottom: theme.spacing(2)\n    },\n    details: {\n        flex: '5',\n        flexDirection: 'column'\n    },\n    content: {\n        flex: '1'\n    },\n    buttonDiv: {\n        display: 'flex',\n        flex: '1',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    button: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    cover: {\n        width: 151\n    },\n    customerName: {\n        fontWeight: 'bold'\n    },\n    customerInfo: {\n        marginTop: theme.spacing(1)\n    },\n    customerPicture: {\n        borderRadius: '50%',\n        objectFit: 'cover',\n        width: 100,\n        height: 100\n    }\n}));\n\nexport default function CustomerItem({ id, name, phone, hairColor }) {\n    const classes = useStyles();\n    const customer = { id, name, phone, hairColor };\n\n    return (\n        <div dir=\"rtl\">\n            <Card className={classes.root}>\n                <div className={classes.details}>\n                    <CardContent className={classes.content}>\n                        <Typography component=\"h5\" variant=\"h5\" className={classes.customerName}>\n                            {name}\n                        </Typography>\n                        <div className={classes.customerInfo}>\n                            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                טלפון: {phone}\n                            </Typography>\n                            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                צבע שיער מועדף: {hairColor}\n                            </Typography>\n                        </div>\n                    </CardContent>\n                </div>\n                <div className={classes.buttonDiv}>\n                    <EditButton customer={customer} />\n                </div>\n            </Card>\n        </div>\n    );\n}\n","import { makeStyles } from '@mui/styles';\nimport { useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\n\nconst useStyles = makeStyles((theme) => ({\n    addButton: {\n        marginBottom: theme.spacing(2)\n    }\n}));\n\nexport default function AddCustomerButton() {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [name, setName] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [favoriteHairColor, setFavoriteHairColor] = useState('');\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleSave = () => {\n        console.log({ name, phoneNumber, favoriteHairColor });\n        handleClose();\n    };\n\n    return (\n        <>\n            <Button variant=\"contained\" color=\"primary\" shape=\"circle\" className={classes.addButton} onClick={handleClickOpen}>\n                <AddIcon />\n            </Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <div dir=\"rtl\">\n                    <DialogTitle id=\"form-dialog-title\">הוסף לקוח</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"שם\"\n                            type=\"text\"\n                            fullWidth\n                            value={name}\n                            onChange={(event) => setName(event.target.value)}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"phoneNumber\"\n                            label=\"מספר טלפון\"\n                            type=\"text\"\n                            fullWidth\n                            value={phoneNumber}\n                            onChange={(event) => setPhoneNumber(event.target.value)}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"favoriteHairColor\"\n                            label=\"צבע שיער מועדף\"\n                            type=\"text\"\n                            fullWidth\n                            value={favoriteHairColor}\n                            onChange={(event) => setFavoriteHairColor(event.target.value)}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            ביטול\n                        </Button>\n                        <Button onClick={handleSave} color=\"primary\">\n                            שמור\n                        </Button>\n                    </DialogActions>\n                </div>\n            </Dialog>\n        </>\n    );\n}\n","import { Grid, Link } from '@mui/material';\nimport MuiTypography from '@mui/material/Typography';\n\n// project imports\nimport SubCard from 'ui-component/cards/SubCard';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\nimport { gridSpacing } from 'store/constant';\nimport CustomerItem from './Customer';\nimport AddCustomerButton from './AddCustomer';\n\n// ==============================|| TYPOGRAPHY ||============================== //\nconst customers = [\n    {\n        id: 1,\n        name: 'כוכי כהן',\n        phone: '555-555-5555',\n        hairColor: 'חום'\n    },\n    {\n        id: 2,\n        name: 'ריקי כהן',\n        phone: '555-555-5555',\n        hairColor: 'בלונד'\n    },\n    {\n        id: 3,\n        name: 'גלי כהן',\n        phone: '555-555-5555',\n        hairColor: 'חום'\n    },\n    {\n        id: 4,\n        name: 'גלי כהן',\n        phone: '555-555-5555',\n        hairColor: 'חום'\n    },\n    {\n        id: 5,\n        name: 'גלי כהן',\n        phone: '555-555-5555',\n        hairColor: 'חום'\n    },\n    {\n        id: 6,\n        name: 'גלי כהן',\n        phone: '555-555-5555',\n        hairColor: 'חום'\n    },\n    {\n        id: 7,\n        name: 'גלי כהן',\n        phone: '555-555-5555',\n        hairColor: 'חום'\n    }\n];\n\nconst Customers = () => (\n    <div>\n        <AddCustomerButton />\n        {customers.map((customer) => (\n            <CustomerItem\n                key={customer.id}\n                id={customer.id}\n                name={customer.name}\n                phone={customer.phone}\n                hairColor={customer.hairColor}\n                // haircuts={customer.haircuts}\n            />\n        ))}\n    </div>\n);\n\nexport default Customers;\n"],"names":["color","outline","size","sx","others","theme","useTheme","colorSX","palette","background","paper","bgcolor","outlineSX","border","borderColor","sizeSX","width","spacing","height","title","link","icon","Tooltip","placement","ButtonBase","disableRipple","component","Link","href","target","alt","viewBox","fill","xmlns","clipPath","d","primary","main","id","transform","useStyles","makeStyles","button","display","borderRadius","alignItems","justifyContent","EditButton","customer","open","setOpen","useState","name","setName","phone","setPhoneNumber","hairColor","setFavoriteHairColor","classes","handleClose","Button","variant","shape","onClick","className","Edit","Dialog","onClose","DialogTitle","DialogContent","TextField","margin","label","type","fullWidth","value","onChange","event","DialogActions","console","log","root","marginBottom","details","flex","flexDirection","content","buttonDiv","cover","customerName","fontWeight","customerInfo","marginTop","customerPicture","objectFit","CustomerItem","dir","Card","CardContent","Typography","addButton","AddCustomerButton","phoneNumber","favoriteHairColor","Add","customers","map"],"sourceRoot":""}